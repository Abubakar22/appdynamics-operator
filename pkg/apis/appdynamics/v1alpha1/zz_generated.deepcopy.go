// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentRequest) DeepCopyInto(out *AgentRequest) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MatchString != nil {
		in, out := &in.MatchString, &out.MatchString
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentRequest.
func (in *AgentRequest) DeepCopy() *AgentRequest {
	if in == nil {
		return nil
	}
	out := new(AgentRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentStatus) DeepCopyInto(out *AgentStatus) {
	*out = *in
	if in.NsToMonitor != nil {
		in, out := &in.NsToMonitor, &out.NsToMonitor
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToMonitorExclude != nil {
		in, out := &in.NsToMonitorExclude, &out.NsToMonitorExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodesToMonitor != nil {
		in, out := &in.NodesToMonitor, &out.NodesToMonitor
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodesToMonitorExclude != nil {
		in, out := &in.NodesToMonitorExclude, &out.NodesToMonitorExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToInstrument != nil {
		in, out := &in.NsToInstrument, &out.NsToInstrument
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToInstrumentExclude != nil {
		in, out := &in.NsToInstrumentExclude, &out.NsToInstrumentExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NSInstrumentRule != nil {
		in, out := &in.NSInstrumentRule, &out.NSInstrumentRule
		*out = make([]AgentRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstrumentMatchString != nil {
		in, out := &in.InstrumentMatchString, &out.InstrumentMatchString
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentStatus.
func (in *AgentStatus) DeepCopy() *AgentStatus {
	if in == nil {
		return nil
	}
	out := new(AgentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppDBag) DeepCopyInto(out *AppDBag) {
	*out = *in
	if in.NsToMonitor != nil {
		in, out := &in.NsToMonitor, &out.NsToMonitor
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToMonitorExclude != nil {
		in, out := &in.NsToMonitorExclude, &out.NsToMonitorExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DeploysToDashboard != nil {
		in, out := &in.DeploysToDashboard, &out.DeploysToDashboard
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodesToMonitor != nil {
		in, out := &in.NodesToMonitor, &out.NodesToMonitor
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodesToMonitorExclude != nil {
		in, out := &in.NodesToMonitorExclude, &out.NodesToMonitorExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToInstrument != nil {
		in, out := &in.NsToInstrument, &out.NsToInstrument
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToInstrumentExclude != nil {
		in, out := &in.NsToInstrumentExclude, &out.NsToInstrumentExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NSInstrumentRule != nil {
		in, out := &in.NSInstrumentRule, &out.NSInstrumentRule
		*out = make([]AgentRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstrumentMatchString != nil {
		in, out := &in.InstrumentMatchString, &out.InstrumentMatchString
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SchemaUpdateCache != nil {
		in, out := &in.SchemaUpdateCache, &out.SchemaUpdateCache
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppDBag.
func (in *AppDBag) DeepCopy() *AppDBag {
	if in == nil {
		return nil
	}
	out := new(AppDBag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Clusteragent) DeepCopyInto(out *Clusteragent) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Clusteragent.
func (in *Clusteragent) DeepCopy() *Clusteragent {
	if in == nil {
		return nil
	}
	out := new(Clusteragent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Clusteragent) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusteragentList) DeepCopyInto(out *ClusteragentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Clusteragent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusteragentList.
func (in *ClusteragentList) DeepCopy() *ClusteragentList {
	if in == nil {
		return nil
	}
	out := new(ClusteragentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusteragentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusteragentSpec) DeepCopyInto(out *ClusteragentSpec) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.InstrumentMatchString != nil {
		in, out := &in.InstrumentMatchString, &out.InstrumentMatchString
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToInstrument != nil {
		in, out := &in.NsToInstrument, &out.NsToInstrument
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToInstrumentExclude != nil {
		in, out := &in.NsToInstrumentExclude, &out.NsToInstrumentExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToMonitor != nil {
		in, out := &in.NsToMonitor, &out.NsToMonitor
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NsToMonitorExclude != nil {
		in, out := &in.NsToMonitorExclude, &out.NsToMonitorExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodesToMonitor != nil {
		in, out := &in.NodesToMonitor, &out.NodesToMonitor
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodesToMonitorExclude != nil {
		in, out := &in.NodesToMonitorExclude, &out.NodesToMonitorExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InstrumentRule != nil {
		in, out := &in.InstrumentRule, &out.InstrumentRule
		*out = make([]AgentRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusteragentSpec.
func (in *ClusteragentSpec) DeepCopy() *ClusteragentSpec {
	if in == nil {
		return nil
	}
	out := new(ClusteragentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusteragentStatus) DeepCopyInto(out *ClusteragentStatus) {
	*out = *in
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
	in.State.DeepCopyInto(&out.State)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusteragentStatus.
func (in *ClusteragentStatus) DeepCopy() *ClusteragentStatus {
	if in == nil {
		return nil
	}
	out := new(ClusteragentStatus)
	in.DeepCopyInto(out)
	return out
}
